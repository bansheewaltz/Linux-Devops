services:
  test-env:
    build: ../../
    container_name: test-env
    tty: true
    environment:
      - TZ=Asia/Novosibirsk
    deploy:
      resources:
        limits:
          memory: 3072m
    volumes:
      - ../../:/home
    working_dir: /home
    command: bash -c 'cd 09 && bash main.sh'
  
  network-test:
    build: ../../
    container_name: test-env2
    tty: true

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    # user: "1000:1000"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "1000:1000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
    devices:
      - /dev/kmsg
    ports:
      - 8080:8080
    depends_on:
      - redis
      - test-env

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379

  nginx:
    image: flashspys/nginx-static
    container_name: nginx
    volumes:
      - ../../09:/static
    ports:
      - 8081:80
